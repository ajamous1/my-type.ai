/* Use existing global CSS variables from globals.css */

/* Grid background pattern using existing variables */
.withGrid {
  background-image: 
    radial-gradient(circle at 1px 1px, var(--grid-color) 1px, transparent 0);
  background-size: 20px 20px;
  background-position: 0 0;
}

/* Main card container - inherits from card wrapper */
.fontCardBack {
  display: flex;
  flex-direction: column;
  gap: 16px;
  width: 100%;
  height: 100%;
  background-color: var(--background);
  color: var(--text-color);
  border: none; /* Remove border since parent card handles it */
  border-radius: 0.5rem; /* Match existing card border radius */
  padding: 1rem; /* Match existing card padding */
  box-sizing: border-box;
  position: relative;
  overflow: hidden;
}

/* Remove hover effects since parent card handles them */

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .fontCardBack,
  .previewText,
  .controlButton,
  .pangramLine {
    transition: none !important;
    animation: none !important;
  }
}

/* Header section */
.header {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.fontName {
  font-size: clamp(27px, 6vw, 36px); /* 50% bigger */
  font-weight: 700;
  line-height: 1.1;
  margin: 0;
  color: var(--text-color);
  font-family: var(--font-primary);
}

.tagline {
  font-size: 15px; /* 25% bigger */
  font-weight: 500;
  line-height: 1.3;
  margin: 0;
  color: var(--text-secondary);
  opacity: 0.8;
}

/* Description styles removed - now handled in preview block */

/* Preview section */
.preview {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  flex: 1;
  min-height: 80px;
  padding: 12px 0;
  margin: 8px 0;
  text-align: left;
}

.previewText {
  font-size: clamp(16px, 4vw, 20px); /* Reverted to original size */
  font-weight: 400;
  line-height: 1.3;
  color: var(--text-color);
  transition: opacity 140ms ease, transform 140ms ease;
  word-break: break-word;
  white-space: pre-line; /* Preserve line breaks */
}

.previewText[data-type="letters"] {
  letter-spacing: 0.02em;
  word-spacing: 0.3em;
  line-height: 1.4;
}

/* Preview text types */
.previewText[data-type="alphabet"] {
  letter-spacing: 0.05em;
}

.previewText[data-type="numerals"] {
  letter-spacing: 0.1em;
  font-variant-numeric: tabular-nums;
}

.previewText[data-type="pangram"] {
  letter-spacing: normal;
  word-break: normal;
  hyphens: auto;
}

/* Pangram styles - now handled by conditional rendering */

/* Toggle Controls section */
.toggleGroup {
  display: flex;
  gap: 6px;
  margin-top: auto;
  width: 100%;
}

.controlButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 36px;
  flex: 1;
  background-color: var(--button-background);
  color: var(--button-text);
  border: 1px solid var(--button-border);
  border-radius: 8px;
  font-size: 12px;
  font-weight: 500;
  font-family: var(--font-primary);
  cursor: pointer;
  transition: all 0.15s ease;
  user-select: none;
  white-space: nowrap;
  opacity: 0.8;
}

.controlButton:hover {
  background-color: var(--button-hover-background);
  color: var(--button-hover-text);
  opacity: 1;
}

.controlButton:focus-visible {
  outline: 2px solid var(--button-border);
  outline-offset: 1px;
}

.controlButton.active,
.controlButton[aria-pressed="true"] {
  background-color: var(--button-hover-background);
  color: var(--button-hover-text);
  opacity: 1;
  font-weight: 600;
  border-color: var(--button-hover-background);
}

/* Case button gets MyType red styling */
.caseButton {
  color: #DC143C; /* MyType red text */
  border-color: #DC143C; /* MyType red border */
  background-color: transparent;
}

.caseButton.active,
.caseButton[aria-pressed="true"] {
  background-color: #DC143C; /* MyType red background when active */
  color: var(--background); /* White/dark text on red background */
  border-color: #DC143C;
}

.caseButton:hover {
  background-color: rgba(220, 20, 60, 0.1); /* Light red hover for inactive */
  color: #DC143C;
  border-color: #DC143C;
}

.caseButton.active:hover,
.caseButton[aria-pressed="true"]:hover {
  background-color: #B8122A; /* Darker red on hover when active */
  color: var(--background);
  border-color: #B8122A;
}

.controlButton:active {
  transform: translateY(1px);
}

/* Responsive adjustments for card format */
@media (max-width: 768px) {
  .fontCardBack {
    padding: 0.8rem;
    gap: 12px;
  }
  
  .fontName {
    font-size: clamp(24px, 5.25vw, 30px); /* 50% bigger than original mobile */
  }
  
  .tagline {
    font-size: 13px; /* 25% bigger */
  }
  
  .previewText {
    font-size: clamp(14px, 3.5vw, 18px); /* Reverted to original mobile size */
  }
  
  .preview {
    min-height: 60px;
    padding: 8px 0;
  }
  
  .controlButton {
    height: 32px; /* Taller on mobile too */
    font-size: 11px; /* Bigger text */
  }
}

/* Animation keyframes for state changes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.previewText {
  animation: fadeInUp 140ms ease;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .fontCardBack {
    border-width: 2px;
  }
  
  .controlButton {
    border-width: 2px;
  }
}

/* Focus management for keyboard navigation */
.fontCardBack:focus-within {
  outline: 2px solid var(--card-fg);
  outline-offset: 2px;
}
